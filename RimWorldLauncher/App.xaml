<Application x:Class="RimWorldLauncher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:RimWorldLauncher.Converters"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- WPF-UI theme -->
                <ui:ThemesDictionary Theme="Dark" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Converters -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:LogLevelToColorConverter x:Key="LogLevelToColorConverter" />

            <!-- Font Resources -->
            <FontFamily x:Key="FontAwesomeSolid">pack://application:,,,/RimWorldLauncher;component/Assets/Fonts/#Font Awesome 6 Free Solid</FontFamily>

            <!-- Global Styles -->
            <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#2D2D30"/>
            <SolidColorBrush x:Key="ButtonHoverBrush" Color="#444"/>
            <SolidColorBrush x:Key="ButtonPressedBrush" Color="#555"/>
            <SolidColorBrush x:Key="ButtonDisabledBrush" Color="#1E1E1E"/>
            <SolidColorBrush x:Key="StandardBorderBrush" Color="#555"/>
            
            <!-- Buttons -->
            <Style TargetType="ui:Button">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ui:Button">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2">
                                <ContentPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonPressedBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{StaticResource ButtonDisabledBrush}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CheckboxIconStyle" TargetType="CheckBox">
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="MinWidth" Value="40"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value ="4, 0, 0, 0"/>
            </Style>

            <Style x:Key="ToolbarButtonStyle" TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                <Setter Property="MinWidth" Value="20"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style x:Key="IconButtonStyle" TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                <Setter Property="MinWidth" Value="22"/>
                <Setter Property="MinHeight" Value="22"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <!-- Inputs -->
            <Style TargetType="TextBox">
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Margin" Value="5, 0"/>
                <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            </Style>

            <Style TargetType="CheckBox">
                <Setter Property="MinWidth" Value="40"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            <!-- Label -->
            <Style TargetType="Label">
                <Setter Property="Padding" Value="2, 0"/>
                <Setter Property="MaxHeight" Value="25"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            </Style>

            <!-- Status bar -->
            <Style TargetType="StatusBar">
                <Setter Property="Padding" Value="2, 0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
            </Style>

            <Style TargetType="StatusBarItem">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application> 